#cat nginx.conf
# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  _;
        root         /data/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        #location / {
        #}

location / {
        proxy_pass http://127.0.0.1:5678;  # Proxy traffic to localhost:5678
        #for websocker Upgreade and Connection has to be set
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;  # Preserve the host header
        proxy_set_header X-Real-IP $remote_addr;  # Forward client IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Chain of proxies
        proxy_set_header X-Forwarded-Proto $scheme;  # Forward scheme (HTTP/HTTPS)

        # Optional: Timeouts (adjust as needed)
        proxy_connect_timeout 60s;
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;

        # Optional: Buffering (adjust for large payloads)
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        proxy_temp_file_write_size 256k;
    }


        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }


        #Add lets encrypt
        location ^~ /.well-known/acme-challenge/ {
          default_type "text/plain";
          #rewrite /.well-known/acme-challenge/(.*) /$1 break;
          root /data/nginx/letsencrypt;
        }
    }

# Settings for a TLS enabled server.
#
    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/ssl/selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/selfsigned.key;

        location / {
            proxy_pass http://127.0.0.1:5678;  # Proxy traffic to localhost:5678
            #for websocker Upgreade and Connection has to be set
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;  # Preserve the host header
            proxy_set_header X-Real-IP $remote_addr;  # Forward client IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Chain of proxies
            proxy_set_header X-Forwarded-Proto $scheme;  # Forward scheme (HTTP/HTTPS)

            # Optional: Timeouts (adjust as needed)
            proxy_connect_timeout 60s;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;

            # Optional: Buffering (adjust for large payloads)
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            proxy_temp_file_write_size 256k;
        }
    
        error_page 404 /404.html;
           location = /40x.html {

                   }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

}